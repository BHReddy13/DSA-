class Solution {
public:
    struct compare {
    bool operator()(const pair<int, int>& p1, const pair<int, int>& p2) {
        if (p1.first == p2.first) {
            return p1.second < p2.second; // Descending order for the second element
        }
        return p1.first > p2.first; // Ascending order for the first element
    }
};

    string clearStars(string s) {
        priority_queue<pair<int, int>, vector<pair<int, int>>, compare> pq;
        vector<int> indices;
        for(int i=0;i<s.length();i++){
            if(s[i]=='*'){
                indices.push_back(pq.top().second);
                pq.pop();
            }
            else{
                pq.push({s[i],i});
            }
        }
        int j=0;
        string result="";
        sort(indices.begin(),indices.end());
        for(int i=0;i<indices.size();i++)cout<<indices[i]<<endl;
        for(int i=0;i<s.length();i++){
            if(j<indices.size()&&i==indices[j]){
                j++;
            }
            else if(s[i]!='*')result+=s[i];
        }
        return result;
    }
};
